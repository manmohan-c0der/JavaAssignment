1. What is an interface in Java?
Ans: An interface in Java is a mechanism that is used to achieve complete abstraction. It is basically a kind of
class that contains only constants and abstract methods.
2. Which modifiers are allowed for methods in an Interface?Explain with an example
Ans: Only abstract and public modifiers are allowed for methods in interfaces.
3. What is the use of interface in Java?
Ans: There are many reasons to use interfaces in java. They are as follows:
a. An interface is used to achieve full abstraction.
b. Using interfaces is the best way to expose our projectâ€™s API to some other project.
c. Programmers use interfaces to customise features of software differently for different objects.
d. By using interface, we can achieve the functionality of multiple inheritance.






Abstract class	:                                                                                Interface :
1) Abstract class can have abstract and non-abstract methods.	                              Interface can have only abstract methods. Since Java 8, it can have default and static methods also.
2) Abstract class doesn't support multiple inheritance.	                                      Interface supports multiple inheritance.
3) Abstract class can have final, non-final, static and non-static variables.	             Interface has only static and final variables.
4) Abstract class can provide the implementation of interface.	                             Interface can't provide the implementation of abstract class.
5) The abstract keyword is used to declare abstract class.	                             The interface keyword is used to declare interface.
6) An abstract class can extend another Java class and implement multiple Java interfaces.	An interface can extend another Java interface only.
7) An abstract class can be extended using keyword "extends".	                               An interface can be implemented using keyword "implements".
8) A Java abstract class can have class members like private,  protected, etc.    	      Members of a Java interface are public by default.
9)Example:
public abstract class Shape{
public abstract void draw();                                                                       Example:

                                                                                                    public interface Drawable{
                                                                                                               void draw();
                                                                                                            }
}	